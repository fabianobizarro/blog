[{"content":"Fala pessoal, beleza?\nNeste post (e nos próximos) vou comentar um pouco sobre os paradigmas de programação e suas implementações em algumas linguagens.\nMinha ideia é analisar como um determinado problema pode ser resolvido de diferentes formas por diferentes paradigmas e linguagens.\nCada paradigma e linguagem tem suas características e isso nos ajuda a pensar de forma diferente.\nO que é um paradigma de programação? Um paradigma é uma forma de se programar, onde temos um modelo a ser seguido. Cada paradigma tem seu conjunto de regras e estruturas usadas em sua implementação.\nUm paradigma pode ser melhor que outro para resolver um determinado problema.\nOs paradigmas Existe um certo agrupamento de paradigmas, são eles:\nImperativo Estruturado; Orientado a objetos; Declarativo Funcional; Lógico. Existem algumas outras classificações de paradigmas, mas vou me concentrar nessas.\nImperativo É o paradigma que descreve o processamento e a lógica em ações e comandos que podem ou não alterar o estado de um valor. Neste paradigma, nós falamos ao computador como fazer uma determinada tarefa. O nome do paradigma tem a ver com tempo verbal imperativo. São comandos com \u0026ldquo;faça\u0026rdquo;, \u0026ldquo;escreva\u0026rdquo;, “calcule”.\nExemplos de linguagens: FORTRAN, COBOL, C,\nEstrutural Podemos dizer que este paradigma está relacionado (ou é um subtipo) com o paradigma imperativo.\nUma característica aqui é que este paradigma impõe sobre a estrutura de controle de execução: temos estruturas que controlam o fluxo de execução do código (os famosos is/else, for, while e etc.).\nExemplos de linguagens: C, C++, Pascal, Java, PHP\nOrientado a Objetos Outro paradigma relacionado ao Imperativo, o paradigma Orientado a Objetos apresenta características que nos permitem agrupar e relacionar estado e comportamento: os objetos.\nUm objeto pode ter propriedades para descrever seu estado, e funções que têm o comportamento de alterá-lo.\nExistem 3 conceitos que são bastante utilizados neste paradigma: Encapsulamento, Herança e Polimorfismo.\nExemplos de linguagens: Smalltalk, C#, Java, C++, Python, Ruby\nDeclarativo É um paradigma onde temos declarações de dados e estruturas, mas não temos a declaração das instruções e comandos da máquina. É como se nós informássemos ao computador como querermos as coisas, e não como fazê-las, diferente da programação imperativa.\nExemplos de linguagens: Prolog, Haskell, SQL\nFuncional Baseado no conceito de funções matemáticas, este paradigma faz uso dessas funções e expressões para a transformação de um estado. Um conceito importante neste paradigma é o da imutabilidade.\nAo invés de ter um procedimento que altere o estado de um determinado dado, a ideia neste paradigma é que este procedimento gera um novo estado baseado no dado original, garantindo a imutabilidade deste.\nExemplos de linguagens: F#, Haskell, Clojure, ML\nLógico Consiste na ideia de se construir um conjunto de fatos e regras, e a partir destas o computador tenta encontrar uma solução.\nExemplos de linguagens: Prolog, Datalog\nLinguagens multiparadigma Uma linguagem de programação pode implementar diversos paradigmas, o que torna ela uma linguagem multiparadigma.\nAlguns exemplos: C#, Python, C++, Ruby, Swift, Kotlin\nO desafio O desafio que vou utilizar para comparar os paradigmas e as linguagens é o FizzBuzz.\nÉ um desafio de solução bem simples, mas que é o suficiente para podermos ver as implementações em diferentes formas.\nA tarefa é a seguinte: escrever um programa que imprima os números de 1 a N, sendo que se o número for múltiplo de 3, deve ser impresso “Fizz” no lugar do número, se for múltiplo de 5, deve ser impresso “Buzz”, se for múltiplo de 3 e 5, deve ser impresso “FizzBuzz”. Se não entrar nessas condições, então deve ser impresso o número normalmente.\nO resultado esperado é algo assim:\n1, 2, Fizz, 4, Buzz, Fizz, 7, 8, Fizz, Buzz, 11, Fizz, 13, 14, Fizzbuzz, 16, 17, Fizz, 19, Buzz, Fizz, 22, 23, Fizz, Buzz, 26, Fizz, 28, 29, Fizzbuzz, 31, 32, Fizz, 34, Buzz, Fizz, ... Nas próximas postagens, vamos ver sobre a resolução do Fizzbuzz em diferentes formas, e analisar um poucos os paradigmas e linguagens de programação.\nAté a próxima!\n","permalink":"https://fabianobizarro.dev/blog/posts/paradigmas-programacao/","summary":"Fala pessoal, beleza?\nNeste post (e nos próximos) vou comentar um pouco sobre os paradigmas de programação e suas implementações em algumas linguagens.\nMinha ideia é analisar como um determinado problema pode ser resolvido de diferentes formas por diferentes paradigmas e linguagens.\nCada paradigma e linguagem tem suas características e isso nos ajuda a pensar de forma diferente.\nO que é um paradigma de programação? Um paradigma é uma forma de se programar, onde temos um modelo a ser seguido.","title":"Paradigmas de Programação"}]